[gd_scene load_steps=5 format=3 uid="uid://i2nns2fwmaq6"]

[ext_resource type="Texture2D" uid="uid://bnb5apcus5j3a" path="res://icon.svg" id="1_qfbcx"]

[sub_resource type="GDScript" id="GDScript_ibxe2"]
script/source = "extends Node

@export
var controller_id : int

func set_color(color : Color):
	$Visual.modulate = color
"

[sub_resource type="GDScript" id="GDScript_cfl7c"]
script/source = "extends Node

@export
var speed = 1
@onready
var max_speed = speed * 10000

@export
var acceleration = 0.1
@export
var desceleration = 0.8

func _ready():
	JoyInput.bind(owner.controller_id, button_input)

func _physics_process(delta):
	owner.set_velocity(process_velocity(delta))
	owner.move_and_slide()

func process_velocity(delta) -> Vector2:
	var desired_velocity = get_input_direction() * delta * max_speed
	
	if desired_velocity != Vector2.ZERO && owner.get_velocity().length() <= max_speed:
		return owner.get_velocity().lerp(desired_velocity, acceleration)
	else:
		return owner.get_velocity().lerp(desired_velocity, desceleration)

func get_input_direction():
	return JoyInput.get_vector(owner.controller_id, \"right\", \"left\", \"down\", \"up\")

func button_input(event: InputEvent):
	if event.is_action_pressed(\"action\"):
		JoyInput.start_vibration(owner.controller_id, 0, 0.5, 1)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_h3moi"]
size = Vector2(60, 60)

[node name="Player" type="CharacterBody2D"]
script = SubResource("GDScript_ibxe2")

[node name="Control" type="Node" parent="."]
script = SubResource("GDScript_cfl7c")

[node name="Visual" type="Node2D" parent="."]

[node name="Sprite2D" type="Sprite2D" parent="Visual"]
scale = Vector2(0.5, 0.5)
texture = ExtResource("1_qfbcx")

[node name="Physics" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_h3moi")
